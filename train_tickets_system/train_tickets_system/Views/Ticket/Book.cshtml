@model train_tickets_system.ViewModels.BookViewModel

@{
    ViewBag.Title = "Book";
}

<script>
    var pricePerTicket = @Model.priceEconomy;
    var priceEconomy = @Model.priceEconomy;
    var priceBusiness = @Model.priceBusiness;
    

    document.body.onload = function() {
        if (document.getElementById("economy").checked) {
            pricePerTicket = priceEconomy;
        } else {
            pricePerTicket = priceBusiness;
        }

        var dd = document.getElementById("seats");
        document.getElementById("price").innerHTML = "&euro;" + (pricePerTicket * dd.options[dd.selectedIndex].value).toFixed(2);
    }

    function updateTicketPrice() {
        if (document.getElementById("economy").checked) {
            pricePerTicket = priceEconomy;
        } else {
            pricePerTicket = priceBusiness;
        }

        var dd = document.getElementById("seats");
        document.getElementById("price").innerHTML = "&euro;" + (pricePerTicket * dd.options[dd.selectedIndex].value).toFixed(2);
    }
</script>

<style>
    @@media screen and (max-width: 768px) {
        .centermeh {
            margin: auto;
            width: 60%;
            padding: 10px;
        }
    }
</style>

<h2>@ViewBag.Title</h2>
<h4>Book a ticket</h4>

@if (this.Html.ViewData.ModelState.Any(k => k.Key == string.Empty))
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(true)
    </div>
}

<hr />

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Trip.TripId)

    <div class="form-horizontal centermeh">

        <div class="form-group">
            @Html.LabelFor(model => model.Trip.Route.InitialCity, htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    @Model.Trip.Route.InitialCity.Name
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Trip.Route.TargetCity, htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    @Model.Trip.Route.TargetCity.Name
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Trip.DepartureTime, htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                <p class="form-control-static">
                    @Model.Trip.DepartureTime.ToShortDateString() at @Model.Trip.DepartureTime.ToShortTimeString()
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Class", htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                <div class="radio-inline">
                    <label style="font-weight: normal !important;">
                        @Html.RadioButtonFor(model => model.travelingClass, true, new { @checked = true, @onchange = "updateTicketPrice()", id = "economy" })
                        Economy
                    </label>
                </div>

                <div class="radio-inline">
                    <label style="font-weight: normal !important;">
                        @Html.RadioButtonFor(model => model.travelingClass, false, new { @onchange = "updateTicketPrice()", id="business"})
                        Business
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Seats, htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(model => model.numberSeats, (SelectList) Model.Seats, htmlAttributes: new { @class = "form-control", @id = "seats", @onchange="updateTicketPrice()"})
                @Html.ValidationMessageFor(model => model.Seats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Price", htmlAttributes: new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                <p class="form-control-static text-info" style="font-weight: bold" id="price">
                    
                </p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-ok"></span> BOOK</button>
            </div>
        </div>
    </div>
}

